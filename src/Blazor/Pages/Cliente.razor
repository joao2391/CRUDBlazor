@page "/cliente"

@using Blazor.Data
@using Models = Blazor.Client.Models


@inject ClienteService Service
@inject IJSRuntime JSRuntime

<h3>Clientes</h3>
<hr />

@if (clientes == null | clientes.Count() == 0)
{
    <p>Ainda não há clientes cadastrados!</p>
    <NavLink class="nav-link" href="Clientes/cadastrar">
        <span>Cadastrar</span>
    </NavLink>
}
else
{
    <table class="table">
        <thead>
            <tr>
                <th>Nome</th>
                <th>Email</th>
                <th>Telefone</th>
                <th>Celular</th>
                <th>RG</th>
                <th>CPF</th>
                <th>Endereco</th>

            </tr>
        </thead>
        <tbody>
            @foreach (var cliente in clientes)
            {
                <tr>
                    <td>@cliente.Nome</td>
                    <td>@cliente.Email</td>
                    <td>@cliente.Telefone</td>
                    <td>@cliente.Celular</td>
                    <td>@cliente.Rg</td>
                    <td>@cliente.Cpf</td>
                    <td>@cliente.Endereco</td>
                    <td><a class="nav-link" href="Clientes/editar/@cliente.Id">Editar</a></td>
                    @*<td><input type="submit" value="Excluir" class="btn btn-danger" @onclick="(() => OpenModal(cliente))" /></td>*@
                <td><button value="Excluir" class="btn btn-danger" @onclick="(() => OpenModal(cliente))">Excluir</button></td>
                </tr>


            }


        </tbody>
    </table>
    
}

@code {

    private IEnumerable<Models.Cliente> clientes;
    public string url = "Clientes/editar";
    //NavigationManager nav;


    protected override async Task OnInitializedAsync()
    {
        clientes = await Service.GetAllAsync();
        
    }

    public async Task OpenModal(Models.Cliente cliente)
    {
        await JSRuntime.InvokeAsync<string>(

           "jsFunctions.openModal", null);

        ExcluirCliente(cliente);

         await JSRuntime.InvokeAsync<string>(

           "jsFunctions.refreshPage", null);
        
    }

    private void ExcluirCliente(Models.Cliente cliente)
    {
        Service.Delete(cliente);

    }

    //public void Redirect(Guid id)
    //{

    //    nav.NavigateTo(url+"/"+)
    //}
}